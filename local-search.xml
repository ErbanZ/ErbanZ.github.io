<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>April 7：Weekly Journal Board</title>
    <link href="/2022/08/12/pages220807/"/>
    <url>/2022/08/12/pages220807/</url>
    
    <content type="html"><![CDATA[<h1 id="⑨"><a href="#⑨" class="headerlink" title="⑨"></a>⑨</h1><blockquote><p>老夫聊发少年狂，左牵黄，右擎苍，锦帽貂裘，千骑卷平冈。为报倾城随太守，亲射虎，看孙郎。</p><p>酒酣胸胆尚开张，鬓微霜，又何妨！持节云中，何日遣冯唐？会挽雕弓如满月，西北望，射天狼。</p></blockquote><h2 id="2022年8月1日"><a href="#2022年8月1日" class="headerlink" title="2022年8月1日"></a>2022年8月1日</h2><h3 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a><a href="https://leetcode.cn/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></h3><h2 id="2022年8月2日"><a href="#2022年8月2日" class="headerlink" title="2022年8月2日"></a>2022年8月2日</h2><h3 id="234-回文链表"><a href="#234-回文链表" class="headerlink" title="234. 回文链表"></a><a href="https://leetcode.cn/problems/palindrome-linked-list/">234. 回文链表</a></h3><h2 id="2022年8月3日"><a href="#2022年8月3日" class="headerlink" title="2022年8月3日"></a>2022年8月3日</h2><h3 id="Iframe-详解"><a href="#Iframe-详解" class="headerlink" title="Iframe 详解"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#iframe_%E8%AF%A6%E8%A7%A3" title="Permalink to Iframe 详解">Iframe 详解</a></h3><p>网络安全的一个很好的经验法则是： <strong>“你怎么谨慎都不为过，如果你决定要做这件事，多检查一遍；如果是别人做的，在被证明是安全的之前，都假设这是危险的。”</strong><br>A good rule for web security is： “You can never be too cautious. If you made it, double-check it anyway. If someone else made it, assume it’s dangerous until proven otherwise.”</p><h2 id="2022年8月4日"><a href="#2022年8月4日" class="headerlink" title="2022年8月4日"></a>2022年8月4日</h2><h3 id="141-环形链表"><a href="#141-环形链表" class="headerlink" title="141. 环形链表"></a><a href="https://leetcode.cn/problems/linked-list-cycle/">141. 环形链表</a></h3><h2 id="2022年8月5日"><a href="#2022年8月5日" class="headerlink" title="2022年8月5日"></a>2022年8月5日</h2><h3 id="104-二叉树的最大深度"><a href="#104-二叉树的最大深度" class="headerlink" title="104. 二叉树的最大深度"></a><a href="https://leetcode.cn/problems/maximum-depth-of-binary-tree/">104. 二叉树的最大深度</a></h3><h2 id="2022年8月6日"><a href="#2022年8月6日" class="headerlink" title="2022年8月6日"></a>2022年8月6日</h2><h2 id="2022年8月7日"><a href="#2022年8月7日" class="headerlink" title="2022年8月7日"></a>2022年8月7日</h2><h3 id="98-验证二叉搜索树"><a href="#98-验证二叉搜索树" class="headerlink" title="98. 验证二叉搜索树"></a><a href="https://leetcode.cn/problems/validate-binary-search-tree/">98. 验证二叉搜索树</a></h3>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>July 31：Weekly Journal Board</title>
    <link href="/2022/08/12/pages220731/"/>
    <url>/2022/08/12/pages220731/</url>
    
    <content type="html"><![CDATA[<h1 id="⑧"><a href="#⑧" class="headerlink" title="⑧"></a>⑧</h1><blockquote><p>十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。</p><p>夜来幽梦忽还乡，小轩窗，正梳妆。相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。</p></blockquote><h2 id="2022年7月25日"><a href="#2022年7月25日" class="headerlink" title="2022年7月25日"></a>2022年7月25日</h2><p>该题描述需认真查看👇👇👇👇</p><h3 id="8-字符串转换整数-atoi"><a href="#8-字符串转换整数-atoi" class="headerlink" title="8. 字符串转换整数 (atoi)"></a><a href="https://leetcode.cn/problems/string-to-integer-atoi/">8. 字符串转换整数 (atoi)</a></h3><h2 id="2022年7月26日"><a href="#2022年7月26日" class="headerlink" title="2022年7月26日"></a>2022年7月26日</h2><h3 id="28-实现-strStr"><a href="#28-实现-strStr" class="headerlink" title="28. 实现 strStr()"></a><a href="https://leetcode.cn/problems/implement-strstr/">28. 实现 strStr()</a></h3><h2 id="2022年7月27日"><a href="#2022年7月27日" class="headerlink" title="2022年7月27日"></a>2022年7月27日</h2><h3 id="38-外观数列"><a href="#38-外观数列" class="headerlink" title="38. 外观数列"></a><a href="https://leetcode.cn/problems/count-and-say/">38. 外观数列</a></h3><h2 id="2022年7月28日"><a href="#2022年7月28日" class="headerlink" title="2022年7月28日"></a>2022年7月28日</h2><h3 id="14-最长公共前缀"><a href="#14-最长公共前缀" class="headerlink" title="14. 最长公共前缀"></a><a href="https://leetcode.cn/problems/longest-common-prefix/">14. 最长公共前缀</a></h3><h2 id="2022年7月29日"><a href="#2022年7月29日" class="headerlink" title="2022年7月29日"></a>2022年7月29日</h2><h3 id="237-删除链表中的节点"><a href="#237-删除链表中的节点" class="headerlink" title="237. 删除链表中的节点"></a><a href="https://leetcode.cn/problems/delete-node-in-a-linked-list/">237. 删除链表中的节点</a></h3><p>leetcode19：注意多种解法👇👇👇👇</p><h3 id="19-删除链表的倒数第-N-个结点"><a href="#19-删除链表的倒数第-N-个结点" class="headerlink" title="19. 删除链表的倒数第 N 个结点"></a><a href="https://leetcode.cn/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></h3><h2 id="2022年7月30日"><a href="#2022年7月30日" class="headerlink" title="2022年7月30日"></a>2022年7月30日</h2><h2 id="2022年7月31日"><a href="#2022年7月31日" class="headerlink" title="2022年7月31日"></a>2022年7月31日</h2><h3 id="206-反转链表"><a href="#206-反转链表" class="headerlink" title="206. 反转链表"></a><a href="https://leetcode.cn/problems/reverse-linked-list/">206. 反转链表</a></h3>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>July 24：Weekly Journal Board</title>
    <link href="/2022/07/29/pages220724/"/>
    <url>/2022/07/29/pages220724/</url>
    
    <content type="html"><![CDATA[<h1 id="⑦"><a href="#⑦" class="headerlink" title="⑦"></a>⑦</h1><blockquote><p>大江东去，浪淘尽，千古风流人物。故垒西边，人道是，三国周郎赤壁。乱石穿空，惊涛拍岸，卷起千堆雪。江山如画，一时多少豪杰。</p><p>遥想公瑾当年，小乔初嫁了，雄姿英发。羽扇纶巾，谈笑间，樯橹灰飞烟灭。故国神游，多情应笑我，早生华发。人生如梦，一尊还酹江月。</p></blockquote><h2 id="2022年7月18日"><a href="#2022年7月18日" class="headerlink" title="2022年7月18日"></a>2022年7月18日</h2><h3 id="36-有效的数独"><a href="#36-有效的数独" class="headerlink" title="36. 有效的数独"></a><a href="https://leetcode.cn/problems/valid-sudoku/">36. 有效的数独</a></h3><h2 id="2022年7月19日"><a href="#2022年7月19日" class="headerlink" title="2022年7月19日"></a>2022年7月19日</h2><h3 id="48-旋转图像"><a href="#48-旋转图像" class="headerlink" title="48. 旋转图像"></a><a href="https://leetcode.cn/problems/rotate-image/">48. 旋转图像</a></h3><h2 id="2022年7月20日"><a href="#2022年7月20日" class="headerlink" title="2022年7月20日"></a>2022年7月20日</h2><h3 id="344-反转字符串"><a href="#344-反转字符串" class="headerlink" title="344. 反转字符串"></a><a href="https://leetcode.cn/problems/reverse-string/">344. 反转字符串</a></h3><h2 id="2022年7月21日"><a href="#2022年7月21日" class="headerlink" title="2022年7月21日"></a>2022年7月21日</h2><h3 id="7-整数反转"><a href="#7-整数反转" class="headerlink" title="7. 整数反转"></a><a href="https://leetcode.cn/problems/reverse-integer/">7. 整数反转</a></h3><h2 id="2022年7月22日"><a href="#2022年7月22日" class="headerlink" title="2022年7月22日"></a>2022年7月22日</h2><h3 id="387-字符串中的第一个唯一字符"><a href="#387-字符串中的第一个唯一字符" class="headerlink" title="387. 字符串中的第一个唯一字符"></a><a href="https://leetcode.cn/problems/first-unique-character-in-a-string/">387. 字符串中的第一个唯一字符</a></h3><h3 id="242-有效的字母异位词"><a href="#242-有效的字母异位词" class="headerlink" title="242. 有效的字母异位词"></a><a href="https://leetcode.cn/problems/valid-anagram/">242. 有效的字母异位词</a></h3><h3 id="计算机网络：HTTP解析"><a href="#计算机网络：HTTP解析" class="headerlink" title="计算机网络：HTTP解析"></a><a href="https://account.geekbang.org/">计算机网络：HTTP解析</a></h3><h2 id="2022年7月23日"><a href="#2022年7月23日" class="headerlink" title="2022年7月23日"></a>2022年7月23日</h2><h2 id="2022年7月24日"><a href="#2022年7月24日" class="headerlink" title="2022年7月24日"></a>2022年7月24日</h2><h3 id="125-验证回文串"><a href="#125-验证回文串" class="headerlink" title="125. 验证回文串"></a><a href="https://leetcode.cn/problems/valid-palindrome/">125. 验证回文串</a></h3>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>July 17：Weekly Journal Board</title>
    <link href="/2022/07/29/pages220717/"/>
    <url>/2022/07/29/pages220717/</url>
    
    <content type="html"><![CDATA[<h1 id="⑥"><a href="#⑥" class="headerlink" title="⑥"></a>⑥</h1><blockquote><p>明月几时有？把酒问青天。不知天上宫阙，今夕是何年。我欲乘风归去，又恐琼楼玉宇，高处不胜寒。起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。不应有恨，何事长向别时圆？人有悲欢离合，月有阴晴圆缺，此事古难全。但愿人长久，千里共婵娟。</p></blockquote><h2 id="2022年7月11日"><a href="#2022年7月11日" class="headerlink" title="2022年7月11日"></a>2022年7月11日</h2><h3 id="217-存在重复元素"><a href="#217-存在重复元素" class="headerlink" title="217. 存在重复元素"></a><a href="https://leetcode.cn/problems/contains-duplicate/">217. 存在重复元素</a></h3><h2 id="2022年7月12日"><a href="#2022年7月12日" class="headerlink" title="2022年7月12日"></a>2022年7月12日</h2><h3 id="136-只出现一次的数字"><a href="#136-只出现一次的数字" class="headerlink" title="136. 只出现一次的数字"></a><a href="https://leetcode.cn/problems/single-number/">136. 只出现一次的数字</a></h3><h2 id="2022年7月13日"><a href="#2022年7月13日" class="headerlink" title="2022年7月13日"></a>2022年7月13日</h2><h3 id="350-两个数组的交集-II"><a href="#350-两个数组的交集-II" class="headerlink" title="350. 两个数组的交集 II"></a><a href="https://leetcode.cn/problems/intersection-of-two-arrays-ii/">350. 两个数组的交集 II</a></h3><h2 id="2022年7月14日"><a href="#2022年7月14日" class="headerlink" title="2022年7月14日"></a>2022年7月14日</h2><h3 id="66-加一"><a href="#66-加一" class="headerlink" title="66. 加一"></a><a href="https://leetcode.cn/problems/plus-one/">66. 加一</a></h3><h2 id="2022年7月15日"><a href="#2022年7月15日" class="headerlink" title="2022年7月15日"></a>2022年7月15日</h2><h3 id="283-移动零"><a href="#283-移动零" class="headerlink" title="283. 移动零"></a><a href="https://leetcode.cn/problems/move-zeroes/">283. 移动零</a></h3><h2 id="2022年7月16日"><a href="#2022年7月16日" class="headerlink" title="2022年7月16日"></a>2022年7月16日</h2><h2 id="2022年7月17日"><a href="#2022年7月17日" class="headerlink" title="2022年7月17日"></a>2022年7月17日</h2><h3 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1. 两数之和"></a><a href="https://leetcode.cn/problems/two-sum/">1. 两数之和</a></h3>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>July 10：Weekly Journal Board</title>
    <link href="/2022/07/14/pages220710/"/>
    <url>/2022/07/14/pages220710/</url>
    
    <content type="html"><![CDATA[<h1 id="⑤"><a href="#⑤" class="headerlink" title="⑤"></a>⑤</h1><blockquote><p>春到人间景色新，桃红李白柳条青。香车宝马闲来往，引却东风入禁城。酾剩酒，豁吟情，顿教忘却利和名。豪来试说当年事，犹记旌阳伏水精。</p></blockquote><h2 id="2022年7月4日"><a href="#2022年7月4日" class="headerlink" title="2022年7月4日"></a>2022年7月4日</h2><p>问题描述：设计一个类，求一个数据流中第k大的数（使用二叉搜索树会有不错的效果）</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c70653826f1d43b393a95ad2b2feb302~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="235-二叉搜索树的最近公共祖先"><a href="#235-二叉搜索树的最近公共祖先" class="headerlink" title="235. 二叉搜索树的最近公共祖先"></a><a href="https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree/">235. 二叉搜索树的最近公共祖先</a></h3><h2 id="2022年7月5日"><a href="#2022年7月5日" class="headerlink" title="2022年7月5日"></a>2022年7月5日</h2><p>一棵普通二叉搜索树和一棵平衡二叉树：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/52a9adb37fdc4cdea8f6fd545bc64531~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="110-平衡二叉树"><a href="#110-平衡二叉树" class="headerlink" title="110. 平衡二叉树"></a><a href="https://leetcode.cn/problems/balanced-binary-tree/">110. 平衡二叉树</a></h3><h2 id="2022年7月6日"><a href="#2022年7月6日" class="headerlink" title="2022年7月6日"></a>2022年7月6日</h2><h3 id="108-将有序数组转换为二叉搜索树"><a href="#108-将有序数组转换为二叉搜索树" class="headerlink" title="108. 将有序数组转换为二叉搜索树"></a><a href="https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree/">108. 将有序数组转换为二叉搜索树</a></h3><h2 id="2022年7月7日"><a href="#2022年7月7日" class="headerlink" title="2022年7月7日"></a>2022年7月7日</h2><h3 id="26-删除有序数组中的重复项"><a href="#26-删除有序数组中的重复项" class="headerlink" title="26. 删除有序数组中的重复项"></a><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/">26. 删除有序数组中的重复项</a></h3><h2 id="2022年7月8日"><a href="#2022年7月8日" class="headerlink" title="2022年7月8日"></a>2022年7月8日</h2><h3 id="122-买卖股票的最佳时机-II"><a href="#122-买卖股票的最佳时机-II" class="headerlink" title="122. 买卖股票的最佳时机 II"></a><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/">122. 买卖股票的最佳时机 II</a></h3><h2 id="2022年7月9日"><a href="#2022年7月9日" class="headerlink" title="2022年7月9日"></a>2022年7月9日</h2><h2 id="2022年7月10日"><a href="#2022年7月10日" class="headerlink" title="2022年7月10日"></a>2022年7月10日</h2><h3 id="189-轮转数组"><a href="#189-轮转数组" class="headerlink" title="189. 轮转数组"></a><a href="https://leetcode.cn/problems/rotate-array/">189. 轮转数组</a></h3>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>July 3：Weekly Journal Board</title>
    <link href="/2022/07/08/pages220703/"/>
    <url>/2022/07/08/pages220703/</url>
    
    <content type="html"><![CDATA[<h1 id="④"><a href="#④" class="headerlink" title="④"></a>④</h1><blockquote><p>每日青楼醉梦中，不知城外又春浓。杏花初落疏疏雨，杨柳轻摇淡淡风。浮画肪，跃青呜，小桥门外绿阴笼。行人不入神仙地，人在珠帘第几重？</p></blockquote><h2 id="2022年6月27日"><a href="#2022年6月27日" class="headerlink" title="2022年6月27日"></a>2022年6月27日</h2><h3 id="Web-前端开发者-学习-Web-开发-MDN-mozilla-org"><a href="#Web-前端开发者-学习-Web-开发-MDN-mozilla-org" class="headerlink" title="Web 前端开发者 - 学习 Web 开发 | MDN (mozilla.org)"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Front-end_web_developer">Web 前端开发者 - 学习 Web 开发 | MDN (mozilla.org)</a></h3><h2 id="2022年6月28日"><a href="#2022年6月28日" class="headerlink" title="2022年6月28日"></a>2022年6月28日</h2><h3 id="98-验证二叉搜索树"><a href="#98-验证二叉搜索树" class="headerlink" title="98. 验证二叉搜索树"></a><a href="https://leetcode.cn/problems/validate-binary-search-tree/">98. 验证二叉搜索树</a></h3><h2 id="2022年6月29日"><a href="#2022年6月29日" class="headerlink" title="2022年6月29日"></a>2022年6月29日</h2><h3 id="173-二叉搜索树迭代器"><a href="#173-二叉搜索树迭代器" class="headerlink" title="173. 二叉搜索树迭代器"></a><a href="https://leetcode.cn/problems/binary-search-tree-iterator/">173. 二叉搜索树迭代器</a></h3><h2 id="2022年6月30日"><a href="#2022年6月30日" class="headerlink" title="2022年6月30日"></a>2022年6月30日</h2><h3 id="700-二叉搜索树中的搜索"><a href="#700-二叉搜索树中的搜索" class="headerlink" title="700. 二叉搜索树中的搜索"></a><a href="https://leetcode.cn/problems/search-in-a-binary-search-tree/">700. 二叉搜索树中的搜索</a></h3><h2 id="2022年7月1日"><a href="#2022年7月1日" class="headerlink" title="2022年7月1日"></a>2022年7月1日</h2><h3 id="701-二叉搜索树中的插入操作"><a href="#701-二叉搜索树中的插入操作" class="headerlink" title="701. 二叉搜索树中的插入操作"></a><a href="https://leetcode.cn/problems/insert-into-a-binary-search-tree/">701. 二叉搜索树中的插入操作</a></h3><h3 id="450-删除二叉搜索树中的节点"><a href="#450-删除二叉搜索树中的节点" class="headerlink" title="450. 删除二叉搜索树中的节点"></a><a href="https://leetcode.cn/problems/delete-node-in-a-bst/">450. 删除二叉搜索树中的节点</a></h3><h2 id="2022年7月2日"><a href="#2022年7月2日" class="headerlink" title="2022年7月2日"></a>2022年7月2日</h2><h2 id="2022年7月3日"><a href="#2022年7月3日" class="headerlink" title="2022年7月3日"></a>2022年7月3日</h2><h3 id="703-数据流中的第-K-大元素"><a href="#703-数据流中的第-K-大元素" class="headerlink" title="703. 数据流中的第 K 大元素"></a><a href="https://leetcode.cn/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></h3>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>June 26：Weekly Journal Board</title>
    <link href="/2022/07/01/pages220626/"/>
    <url>/2022/07/01/pages220626/</url>
    
    <content type="html"><![CDATA[<h1 id="③"><a href="#③" class="headerlink" title="③"></a>③</h1><blockquote><p>来时秋暮，到时春暮，归去又还秋暮。丰乐楼上望西川，动不动八千里路。青山无数，白云无数，绿水又还无数。人生七十古来稀，算恁地光阴，能来得几度。</p></blockquote><h2 id="2022年6月20日"><a href="#2022年6月20日" class="headerlink" title="2022年6月20日"></a>2022年6月20日</h2><h3 id="733-图像渲染"><a href="#733-图像渲染" class="headerlink" title="733. 图像渲染"></a><a href="https://leetcode.cn/problems/flood-fill/">733. 图像渲染</a></h3><h2 id="2022年6月21日"><a href="#2022年6月21日" class="headerlink" title="2022年6月21日"></a>2022年6月21日</h2><h3 id="841-钥匙和房间"><a href="#841-钥匙和房间" class="headerlink" title="841. 钥匙和房间"></a><a href="https://leetcode.cn/problems/keys-and-rooms/">841. 钥匙和房间</a></h3><h2 id="2022年6月22日"><a href="#2022年6月22日" class="headerlink" title="2022年6月22日"></a>2022年6月22日</h2><h3 id="394-字符串解码"><a href="#394-字符串解码" class="headerlink" title="394. 字符串解码"></a><a href="https://leetcode.cn/problems/decode-string/">394. 字符串解码</a></h3><h2 id="2022年6月23日"><a href="#2022年6月23日" class="headerlink" title="2022年6月23日"></a>2022年6月23日</h2><h3 id="394-字符串解码-1"><a href="#394-字符串解码-1" class="headerlink" title="394. 字符串解码"></a><a href="https://leetcode.cn/problems/decode-string/">394. 字符串解码</a></h3><h2 id="2022年6月24日"><a href="#2022年6月24日" class="headerlink" title="2022年6月24日"></a>2022年6月24日</h2><h2 id="2022年6月25日"><a href="#2022年6月25日" class="headerlink" title="2022年6月25日"></a>2022年6月25日</h2><h2 id="2022年6月26日"><a href="#2022年6月26日" class="headerlink" title="2022年6月26日"></a>2022年6月26日</h2><h3 id="542-01-矩阵"><a href="#542-01-矩阵" class="headerlink" title="542. 01 矩阵"></a><a href="https://leetcode.cn/problems/01-matrix/">542. 01 矩阵</a></h3>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>June 19：Weekly Journal Board</title>
    <link href="/2022/06/22/pages220619/"/>
    <url>/2022/06/22/pages220619/</url>
    
    <content type="html"><![CDATA[<h1 id="②"><a href="#②" class="headerlink" title="②"></a>②</h1><blockquote><p>依山傍水房树间，行也安然，住也安然；一条耕牛半顷田，收也凭天，荒也凭天；雨过天晴骂小船，鱼在一边，酒在一边；夜晚妻子话灯前，今也谈谈，古也谈谈；日上三竿犹在眠，不是神仙，胜似神仙。</p></blockquote><h2 id="2022年6月13日"><a href="#2022年6月13日" class="headerlink" title="2022年6月13日"></a>2022年6月13日</h2><h3 id="男人一辈子不结婚会怎么样？-知乎-zhihu-com"><a href="#男人一辈子不结婚会怎么样？-知乎-zhihu-com" class="headerlink" title="男人一辈子不结婚会怎么样？ - 知乎 (zhihu.com)"></a><a href="https://www.zhihu.com/question/281901432/answer/446117587">男人一辈子不结婚会怎么样？ - 知乎 (zhihu.com)</a></h3><h3 id="739-每日温度"><a href="#739-每日温度" class="headerlink" title="739. 每日温度"></a><a href="https://leetcode.cn/problems/daily-temperatures/">739. 每日温度</a></h3><h3 id="150-逆波兰表达式求值"><a href="#150-逆波兰表达式求值" class="headerlink" title="150. 逆波兰表达式求值"></a><a href="https://leetcode.cn/problems/evaluate-reverse-polish-notation/">150. 逆波兰表达式求值</a></h3><h2 id="2022年6月14日"><a href="#2022年6月14日" class="headerlink" title="2022年6月14日"></a>2022年6月14日</h2><h3 id="DFS-深度优先搜索（Depth-First-Search）"><a href="#DFS-深度优先搜索（Depth-First-Search）" class="headerlink" title="DFS - 深度优先搜索（Depth First Search）"></a>DFS - 深度优先搜索（Depth First Search）</h3><p><code>DFS</code> 用于查找从根结点到目标结点的路径，<code>DFS</code> 代码模板如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Return true if there is a path from cur to target.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">DFS</span><span class="hljs-params">(Node cur, Node target, Set&lt;Node&gt; visited)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> cur is target;<br>    <span class="hljs-keyword">for</span> (next : each neighbor of cur) &#123;<br>        <span class="hljs-keyword">if</span> (next is not in visited) &#123;<br>            add next to visted;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> <span class="hljs-title function_">DFS</span><span class="hljs-params">(next, target, visited)</span> == <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>递归解决方案存在一个很大的缺点：如果递归的深度太高，将遭受堆栈溢出。 在这种情况下，可以使用使用显式栈实现 <code>DFS</code> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Return true if there is a path from cur to target.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">DFS</span><span class="hljs-params">(<span class="hljs-type">int</span> root, <span class="hljs-type">int</span> target)</span> &#123;<br>    Set&lt;Node&gt; visited;<br>    Stack&lt;Node&gt; s;<br>    add root to s;<br>    <span class="hljs-keyword">while</span> (s is not empty) &#123;<br>        <span class="hljs-type">Node</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> the top element in s;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> cur is target;<br>        <span class="hljs-keyword">for</span> (Node next : the neighbors of cur) &#123;<br>            <span class="hljs-keyword">if</span> (next is not in visited) &#123;<br>                add next to s;<br>                add next to visited;<br>            &#125;<br>        &#125;<br>        remove cur from s;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="494-目标和"><a href="#494-目标和" class="headerlink" title="494. 目标和"></a><a href="https://leetcode.cn/problems/target-sum/">494. 目标和</a></h3><h2 id="2022年6月15日"><a href="#2022年6月15日" class="headerlink" title="2022年6月15日"></a>2022年6月15日</h2><h3 id="94-二叉树的中序遍历"><a href="#94-二叉树的中序遍历" class="headerlink" title="94. 二叉树的中序遍历"></a><a href="https://leetcode.cn/problems/binary-tree-inorder-traversal/">94. 二叉树的中序遍历</a></h3><h2 id="2022年6月16日"><a href="#2022年6月16日" class="headerlink" title="2022年6月16日"></a>2022年6月16日</h2><h3 id="232-用栈实现队列"><a href="#232-用栈实现队列" class="headerlink" title="232. 用栈实现队列"></a><a href="https://leetcode.cn/problems/implement-queue-using-stacks/">232. 用栈实现队列</a></h3><h2 id="2022年6月17日"><a href="#2022年6月17日" class="headerlink" title="2022年6月17日"></a>2022年6月17日</h2><h3 id="225-用队列实现栈"><a href="#225-用队列实现栈" class="headerlink" title="225. 用队列实现栈"></a><a href="https://leetcode.cn/problems/implement-stack-using-queues/">225. 用队列实现栈</a></h3><h2 id="2022年6月18日"><a href="#2022年6月18日" class="headerlink" title="2022年6月18日"></a>2022年6月18日</h2><h2 id="2022年6月19日"><a href="#2022年6月19日" class="headerlink" title="2022年6月19日"></a>2022年6月19日</h2>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>June 12：Weekly Journal Board</title>
    <link href="/2022/06/08/pages220612/"/>
    <url>/2022/06/08/pages220612/</url>
    
    <content type="html"><![CDATA[<h1 id="①"><a href="#①" class="headerlink" title="①"></a>①</h1><blockquote><p>伤情最是晚凉天，憔悴厮人不堪怜。邀酒催肠三杯醉，寻香惊梦五更寒。钗头凤斜卿有泪，荼蘼花了我无缘。小楼寂寞新雨月，也难如钩也难圆。</p></blockquote><h2 id="2022年6月7日"><a href="#2022年6月7日" class="headerlink" title="2022年6月7日"></a>2022年6月7日</h2><h3 id="BFS-广度优先算法（Breadth-First-Search）"><a href="#BFS-广度优先算法（Breadth-First-Search）" class="headerlink" title="BFS - 广度优先算法（Breadth First Search）"></a>BFS - 广度优先算法（Breadth First Search）</h3><p><code>BFS</code> 常用于在 <strong>遍历</strong> 和 <strong>最短路径</strong> 的情况，<code>BFS</code> 代码模板如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the length of the shortest path between root and target node.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">BFS</span><span class="hljs-params">(Node root, Node target)</span> &#123;<br>    Queue&lt;Node&gt; queue;  <span class="hljs-comment">// store all nodes which are waiting to be processed</span><br>    <span class="hljs-type">int</span> <span class="hljs-variable">step</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;       <span class="hljs-comment">// number of steps neeeded from root to current node</span><br>    <span class="hljs-comment">// initialize</span><br>    add root to queue;<br>    <span class="hljs-comment">// BFS</span><br>    <span class="hljs-keyword">while</span> (queue is not empty) &#123;<br>        step = step + <span class="hljs-number">1</span>;<br>        <span class="hljs-comment">// iterate the nodes which are already in the queue</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> queue.size();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; size; ++i) &#123;<br>            <span class="hljs-type">Node</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> the first node in queue;<br>            <span class="hljs-keyword">return</span> step <span class="hljs-keyword">if</span> cur is target;<br>            <span class="hljs-keyword">for</span> (Node next : the neighbors of cur) &#123;<br>                add next to queue;<br>            &#125;<br>            remove the first node from queue;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;          <span class="hljs-comment">// there is no path from root to target</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>有时，确保我们永远 <strong>不会访问一个结点两次</strong> 很重要。否则，我们可能陷入无限循环。如果是这样，我们可以在上面的代码中添加一个 <strong>哈希集</strong> 来解决这个问题：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Return the length of the shortest path between root and target node.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">BFS</span><span class="hljs-params">(Node root, Node target)</span> &#123;<br>    Queue&lt;Node&gt; queue;  <span class="hljs-comment">// store all nodes which are waiting to be processed</span><br>    Set&lt;Node&gt; used;     <span class="hljs-comment">// store all the used nodes</span><br>    <span class="hljs-type">int</span> <span class="hljs-variable">step</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;       <span class="hljs-comment">// number of steps neeeded from root to current node</span><br>    <span class="hljs-comment">// initialize</span><br>    add root to queue;<br>    add root to used;<br>    <span class="hljs-comment">// BFS</span><br>    <span class="hljs-keyword">while</span> (queue is not empty) &#123;<br>        step = step + <span class="hljs-number">1</span>;<br>        <span class="hljs-comment">// iterate the nodes which are already in the queue</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> queue.size();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; size; ++i) &#123;<br>            <span class="hljs-type">Node</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> the first node in queue;<br>            <span class="hljs-keyword">return</span> step <span class="hljs-keyword">if</span> cur is target;<br>            <span class="hljs-keyword">for</span> (Node next : the neighbors of cur) &#123;<br>                <span class="hljs-keyword">if</span> (next is not in used) &#123;<br>                    add next to queue;<br>                    add next to used;<br>                &#125;<br>            &#125;<br>            remove the first node from queue;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;          <span class="hljs-comment">// there is no path from root to target</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Leetcode-200-岛屿数量"><a href="#Leetcode-200-岛屿数量" class="headerlink" title="Leetcode 200. 岛屿数量"></a><a href="https://leetcode.cn/problems/number-of-islands/">Leetcode 200. 岛屿数量</a></h3><h2 id="2022年6月8日"><a href="#2022年6月8日" class="headerlink" title="2022年6月8日"></a>2022年6月8日</h2><h3 id="Leetcode-279-完全平方数"><a href="#Leetcode-279-完全平方数" class="headerlink" title="Leetcode 279. 完全平方数"></a><a href="https://leetcode.cn/problems/perfect-squares/">Leetcode 279. 完全平方数</a></h3><h2 id="2022年6月9日"><a href="#2022年6月9日" class="headerlink" title="2022年6月9日"></a>2022年6月9日</h2><h3 id="Leetcode-155-最小栈"><a href="#Leetcode-155-最小栈" class="headerlink" title="Leetcode 155. 最小栈"></a><a href="https://leetcode.cn/problems/min-stack/">Leetcode 155. 最小栈</a></h3><h2 id="2022年6月10日"><a href="#2022年6月10日" class="headerlink" title="2022年6月10日"></a>2022年6月10日</h2><h2 id="2022年6月11日"><a href="#2022年6月11日" class="headerlink" title="2022年6月11日"></a>2022年6月11日</h2><h3 id="20-有效的括号"><a href="#20-有效的括号" class="headerlink" title="20. 有效的括号"></a><a href="https://leetcode.cn/problems/valid-parentheses/">20. 有效的括号</a></h3><h2 id="2022年6月12日"><a href="#2022年6月12日" class="headerlink" title="2022年6月12日"></a>2022年6月12日</h2>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weeklyJournal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 Hexo 搭建 github pages 后续（主题配置）</title>
    <link href="/2022/05/27/pages220527/"/>
    <url>/2022/05/27/pages220527/</url>
    
    <content type="html"><![CDATA[<h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h1><blockquote><p>通过 hexo 和 github pages 已经搭建好了个人blog框架，也替换了自己喜欢的 hexo 主题样式，将blog部署后在线上查看，网站样式大体上是和模板样式一致的，但是还是有一些区别：文章页面的字数统计和预计时长未显示、各导航页面的大图展示样式不一致等问题。这篇文章就是通过查看 fuild 主题配置文档和 Hexo 配置文档进行解决这些问题。</p></blockquote><h1 id="1-主题配置"><a href="#1-主题配置" class="headerlink" title="1. 主题配置"></a>1. 主题配置</h1><h2 id="1-1-文章页-字数统计和预计时长"><a href="#1-1-文章页-字数统计和预计时长" class="headerlink" title="1.1 文章页-字数统计和预计时长"></a>1.1 文章页-字数统计和预计时长</h2><p>按照 <a href="https://hexo.fluid-dev.com/docs/start/#%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8">开始使用 | Hexo Fluid 用户手册 (fluid-dev.com)</a> 完成 fluid 主题安装后，首先发现的问题就是在文章页面-文章标题下的字数统计以及预估时长显示错误，展示为 <code>&#123;undefined&#125;字 &#123;undefined&#125;分钟</code>，于是我便意识到这应该是配置项没有配置到位，接下来便开始查看文档的漫漫长路。</p><p>首先是在 <a href="https://hexo.fluid-dev.com/docs/guide/#%E6%97%A5%E6%9C%9F-%E5%AD%97%E6%95%B0-%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF-%E9%98%85%E8%AF%BB%E6%95%B0">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a> 的“日期/字数/阅读时长/阅读数”章节中找到配置规范：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 显示在文章页大标题下的文章信息，除了作者和阅读次数，其他功能都是默认开启的。</span><br><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">meta:</span><br>    <span class="hljs-string">···</span><br>    <span class="hljs-string">···</span><br>    <span class="hljs-attr">wordcount:</span>  <span class="hljs-comment"># 字数统计</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 字&quot;</span>  <span class="hljs-comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span><br>    <span class="hljs-attr">min2read:</span>  <span class="hljs-comment"># 阅读时间</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 分钟&quot;</span><br>    <span class="hljs-string">···</span><br>    <span class="hljs-string">···</span><br></code></pre></td></tr></table></figure><p>然后在通过对比我本地blog源文件中名为 <code>_config.fluid.yml</code> 的主题配置文件的内容时，发现在该文件中 <code>wordcount</code> 和 <code>min2read</code> 部分缺少字段 <code>format: &quot;&#123;&#125; 字&quot;</code> 和 <code>format: &quot;&#123;&#125; 分钟&quot;</code>，配置项的缺失导致了最后部署的静态网页该部分未正常展示。解决方法是也很简单，只需要将本地的 <code>_config.fluid.yml</code> 主题配置文件的 <code>wordcount</code> 和 <code>min2read</code> 部分补充完整，然后重新发布即可；</p><h2 id="1-2-导航页面的大图展示样式"><a href="#1-2-导航页面的大图展示样式" class="headerlink" title="1.2 导航页面的大图展示样式"></a>1.2 导航页面的大图展示样式</h2><p>第二个发现的问题便是网站各导航页面（ <code>首页</code> | <code>归档</code> | <code>分类</code> | <code>标签</code> | <code>关于</code> ）的大图展示高度不一致，这对于我来说可太不舒服了，于是准备看看能不能将它们都配置成同样的显示高度。这次直接查看主题配置文件 <code>_config.fluid.yml</code> 中有没有相关的配置项可供使用，啪~很快啊，我便发现了如下的内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 首页</span><br><span class="hljs-attr">index:</span><br>  <span class="hljs-string">···</span><br>  <span class="hljs-string">···</span><br>  <span class="hljs-comment"># 头图高度，屏幕百分比</span><br>  <span class="hljs-comment"># Height ratio of banner image</span><br>  <span class="hljs-comment"># Available: 0 - 100</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">100</span><br>  <span class="hljs-string">···</span><br>  <span class="hljs-string">···</span> <br></code></pre></td></tr></table></figure><p>除了在首页的配置项下面找到了该字段 <code>banner_img_height</code> ，也在文章 <code>post</code> 、归档 <code>archive</code> 、分类 <code>category</code> 、 标签 <code>tag</code> 、 关于 <code>about</code> 、 自定义 <code>custom</code> 、 404页 <code>page404</code> 中找到了相关设置图片高度的字段 <code>banner_img_height</code> ，那么接下来的操作便简单了，只需要将该字段设置成同一个值就行。</p><p>另外我在查看主题配置文件 <code>_config.fluid.yml</code> 中的时候发现该文件的注释十分详细，完全可以当作一个配置文档来进行使用，如果还是有不懂的地方也可以直接查看<a href="https://hexo.fluid-dev.com/docs/guide/#%E6%96%87%E7%AB%A0%E9%A1%B5%E9%A1%B6%E9%83%A8%E5%A4%A7%E5%9B%BE"> fuild 主题配置文档 | Hexo Fluid 用户手册 </a>和<a href="https://hexo.io/zh-cn/docs/front-matter"> Hexo 配置文档</a> 。</p><h1 id="2-参考"><a href="#2-参考" class="headerlink" title="2. 参考"></a>2. 参考</h1><ul><li><a href="https://hexo.fluid-dev.com/docs/guide/#%E6%96%87%E7%AB%A0%E9%A1%B5%E9%A1%B6%E9%83%A8%E5%A4%A7%E5%9B%BE">配置指南 | Hexo Fluid 用户手册</a></li><li><a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter | Hexo</a></li><li><a href="http://momentjs.cn/docs/#/parsing/string-format/">文档 | Moment.js 中文网 (momentjs.cn)</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 Hexo 搭建 github pages</title>
    <link href="/2022/05/23/pages220523/"/>
    <url>/2022/05/23/pages220523/</url>
    
    <content type="html"><![CDATA[<hr><h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h1><blockquote><p>之前一直想搭建一个自己的blog来着，不过一直没有付诸实践（主要是因为个人感觉这个东西对我来说似乎是没有什么用，网上现成的社区平台都有类似的功能）。但是最近突然改变了主意，因为对个人blog突然产生了兴趣以及好友也想通过个人blog的方式记录自己的文章，于是我这个想法再一次升起，下面就是介绍了我搭建blog的流程以及遇到的一些问题。</p></blockquote><p>✨✨✨</p><h2 id="框架选择"><a href="#框架选择" class="headerlink" title="框架选择"></a>框架选择</h2><p>使用 github pages + hexo 的方式进行搭建，其中 github pages 是 github 自带的网站搭建工具（<a href="https://pages.github.com/">GitHub Pages | Websites for you and your projects, hosted directly from your GitHub repository. Just edit, push, and your changes are live.</a>），通过官网文档可以完成通过 github 项目仓库搭建的项目网站；而 hexo 是一款静态站点生成框架（<a href="https://hexo.io/zh-cn/index.html">Hexo</a>），通过生成静态网页托管在 github 上，而编写blog内容使用的是 markdown 文本，比较适合专心于blog内容而不是关注网站本身源码的我。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>在搭建过程中我主要是参考了以下2篇文章的流程，但是在具体的一些步骤中进行了定制化的操作：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程 - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程 - 知乎 (zhihu.com)</a></li></ul><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h1><ul><li>安装 git</li><li>注册 github 账号</li><li>github 创建项目仓库</li><li>安装 node.js</li><li>安装 hexo</li><li>更换主题</li><li>发布文章</li><li>博客源码备份</li></ul><h2 id="1-1-安装-git"><a href="#1-1-安装-git" class="headerlink" title="1.1 安装 git"></a>1.1 安装 git</h2><p>安装 git 的方法在上面的 <a href="#%E5%8F%82%E8%80%83">参考</a> 文章中有详细的过程，这里不再重复造轮子（Reinvent the Wheel）</p><h2 id="1-2-注册-github-账号"><a href="#1-2-注册-github-账号" class="headerlink" title="1.2 注册 github 账号"></a>1.2 注册 github 账号</h2><p>注册 github 账号的方法在上面的 <a href="#%E5%8F%82%E8%80%83">参考</a> 文章中有详细的过程，这里不再重复造轮子（Reinvent the Wheel）</p><h2 id="1-3-github-创建项目仓库"><a href="#1-3-github-创建项目仓库" class="headerlink" title="1.3 github 创建项目仓库"></a>1.3 github 创建项目仓库</h2><p>github 创建项目仓库的方法在上面的 <a href="#%E5%8F%82%E8%80%83">参考</a> 文章中有详细的过程，这里不再重复造轮子（Reinvent the Wheel）</p><h2 id="1-4-安装-node-js"><a href="#1-4-安装-node-js" class="headerlink" title="1.4 安装 node.js"></a>1.4 安装 node.js</h2><p>安装 node.js 的方法在上面的 <a href="#%E5%8F%82%E8%80%83">参考</a> 文章中有的过程不太详细，安装默认化的 node.js 安装有时会导致 hexo 等相关插件环境变量不好控制，因此采用下面这篇文章的安装流程：</p><ul><li><a href="https://cloud.tencent.com/developer/article/1572591">Node.js安装及环境配置</a></li></ul><h2 id="1-5-安装-hexo"><a href="#1-5-安装-hexo" class="headerlink" title="1.5 安装 hexo"></a>1.5 安装 hexo</h2><p>安装 hexo 的方法在上面的 <a href="#%E5%8F%82%E8%80%83">参考</a> 文章中有详细的过程，这里不再重复造轮子（Reinvent the Wheel）</p><p>如果在 github pages 页面看见类似下面 hexo 的默认主页，则可以开始进行下一步操作了；</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8502e8671a4f457aa40c0ae16175660d~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="1-6-更换主题"><a href="#1-6-更换主题" class="headerlink" title="1.6 更换主题"></a>1.6 更换主题</h2><p>换一个让自己进入博客就想写作的主题吧！</p><p>我选择的是 <code>fluid</code> 主题，主创人员对该主题的描述是：</p><blockquote><p>🌊 一款 Material Design 风格的 Hexo 主题 / An elegant Material-Design theme for Hexo</p></blockquote><p>下面附上该主题的文档、demo 和 github 地址：</p><ul><li>文档：<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid 用户手册</a></li><li>demo：<a href="https://hexo.fluid-dev.com/">Hexo Theme Fluid</a></li><li>github：<a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid-dev/hexo-theme-fluid</a></li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/de54c317ec644617b42141475c3559c3~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="1-7-发布文章"><a href="#1-7-发布文章" class="headerlink" title="1.7 发布文章"></a>1.7 发布文章</h2><p>发布文章的方法在上面的 <a href="#%E5%8F%82%E8%80%83">参考</a> 文章中有详细的过程，这里不再重复造轮子（Reinvent the Wheel）</p><h2 id="1-8-博客源码备份"><a href="#1-8-博客源码备份" class="headerlink" title="1.8 博客源码备份"></a>1.8 博客源码备份</h2><p>博客源码备份的方法在上面的 <a href="#heading-2">参考</a> 文章中有详细的过程，但是其中有些步骤无法走通，下面附上我所参考的链接，这里不再重复造轮子（Reinvent the Wheel）：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/71544809">使用git分支保存hexo博客源码到github</a></li></ul><h1 id="2-按部就班的操作"><a href="#2-按部就班的操作" class="headerlink" title="2. 按部就班的操作"></a>2. 按部就班的操作</h1><p>按照 <code>fluid</code> 主题文档一步一步搭建自己的blog：</p><ul><li><a href="https://hexo.fluid-dev.com/docs/start/">开始使用</a></li><li><a href="https://hexo.fluid-dev.com/docs/guide/">配置指南</a></li></ul><h1 id="3-结果展示"><a href="#3-结果展示" class="headerlink" title="3. 结果展示"></a>3. 结果展示</h1><p>个人blog算是将框架完成了，接下来就该慢慢完善~<br>🌊<a href="https://erbanz.github.io/"> erbanz.github.io</a>✨</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li><a href="https://www.zhihu.com/question/264028438/answer/276846637">hexo发布文章删除我在github page中添加的文件？</a></li><li><a href="https://www.zhihu.com/question/28058973/answer/65166747">怎么用hexo上传一个README.md到github？</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>互联网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/05/20/hello-world/"/>
    <url>/2022/05/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hello World</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
